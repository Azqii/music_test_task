openapi: 3.0.3
info:
  title: Music
  version: 0.0.0
paths:
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/albums/album/:
    get:
      operationId: v1_albums_album_list
      description: View для просмотра списка и создания записей в базе данных, соответствующих
        объектам класса Album
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlbumList'
          description: ''
    post:
      operationId: v1_albums_album_create
      description: View для просмотра списка и создания записей в базе данных, соответствующих
        объектам класса Album
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
  /api/v1/albums/album-song/:
    get:
      operationId: v1_albums_album_song_list
      description: ViewSet для всех CRUD операций с записями в базе данных, соответствующим
        объектам класса AlbumSong
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlbumSongList'
          description: ''
    post:
      operationId: v1_albums_album_song_create
      description: ViewSet для всех CRUD операций с записями в базе данных, соответствующим
        объектам класса AlbumSong
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumSong'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlbumSong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlbumSong'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumSong'
          description: ''
  /api/v1/albums/album-song/{id}/:
    get:
      operationId: v1_albums_album_song_retrieve
      description: ViewSet для всех CRUD операций с записями в базе данных, соответствующим
        объектам класса AlbumSong
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album song.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumSong'
          description: ''
    put:
      operationId: v1_albums_album_song_update
      description: ViewSet для всех CRUD операций с записями в базе данных, соответствующим
        объектам класса AlbumSong
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album song.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumSong'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlbumSong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlbumSong'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumSong'
          description: ''
    patch:
      operationId: v1_albums_album_song_partial_update
      description: ViewSet для всех CRUD операций с записями в базе данных, соответствующим
        объектам класса AlbumSong
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album song.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbumSong'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbumSong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbumSong'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumSong'
          description: ''
    delete:
      operationId: v1_albums_album_song_destroy
      description: ViewSet для всех CRUD операций с записями в базе данных, соответствующим
        объектам класса AlbumSong
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album song.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/albums/album/{id}/:
    get:
      operationId: v1_albums_album_retrieve
      description: View для просмотра, изменения и удаления записей из базы данных,
        которые соответствуют объектам класса Album
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    put:
      operationId: v1_albums_album_update
      description: View для просмотра, изменения и удаления записей из базы данных,
        которые соответствуют объектам класса Album
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    patch:
      operationId: v1_albums_album_partial_update
      description: View для просмотра, изменения и удаления записей из базы данных,
        которые соответствуют объектам класса Album
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    delete:
      operationId: v1_albums_album_destroy
      description: View для просмотра, изменения и удаления записей из базы данных,
        которые соответствуют объектам класса Album
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/performers/performer/:
    get:
      operationId: v1_performers_performer_list
      description: View для CRUD операций с моделью Performer
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPerformerList'
          description: ''
    post:
      operationId: v1_performers_performer_create
      description: View для CRUD операций с моделью Performer
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Performer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Performer'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
  /api/v1/performers/performer/{id}/:
    get:
      operationId: v1_performers_performer_retrieve
      description: View для CRUD операций с моделью Performer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
    put:
      operationId: v1_performers_performer_update
      description: View для CRUD операций с моделью Performer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Performer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Performer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Performer'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
    patch:
      operationId: v1_performers_performer_partial_update
      description: View для CRUD операций с моделью Performer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPerformer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPerformer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPerformer'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Performer'
          description: ''
    delete:
      operationId: v1_performers_performer_destroy
      description: View для CRUD операций с моделью Performer
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/songs/song/:
    get:
      operationId: v1_songs_song_list
      description: ViewSet модели песен
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSongList'
          description: ''
    post:
      operationId: v1_songs_song_create
      description: ViewSet модели песен
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Song'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
  /api/v1/songs/song/{id}/:
    get:
      operationId: v1_songs_song_retrieve
      description: ViewSet модели песен
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    put:
      operationId: v1_songs_song_update
      description: ViewSet модели песен
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Song'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    patch:
      operationId: v1_songs_song_partial_update
      description: ViewSet модели песен
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSong'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSong'
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    delete:
      operationId: v1_songs_song_destroy
      description: ViewSet модели песен
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Album:
      type: object
      description: Сериализатор для объектов класса Album
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 100
        release_date:
          type: string
          format: date
          title: Дата выпуска
        performer:
          type: integer
          title: Исполнитель
      required:
      - id
      - performer
      - release_date
      - title
    AlbumSong:
      type: object
      description: Сериализатор для объектов класса AlbumSong
      properties:
        id:
          type: integer
          readOnly: true
        serial_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        album:
          type: integer
          title: Альбом
        song:
          type: integer
          title: Песня
      required:
      - album
      - id
      - serial_number
      - song
    PaginatedAlbumList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Album'
    PaginatedAlbumSongList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AlbumSong'
    PaginatedPerformerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Performer'
    PaginatedSongList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Song'
    PatchedAlbum:
      type: object
      description: Сериализатор для объектов класса Album
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 100
        release_date:
          type: string
          format: date
          title: Дата выпуска
        performer:
          type: integer
          title: Исполнитель
    PatchedAlbumSong:
      type: object
      description: Сериализатор для объектов класса AlbumSong
      properties:
        id:
          type: integer
          readOnly: true
        serial_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        album:
          type: integer
          title: Альбом
        song:
          type: integer
          title: Песня
    PatchedPerformer:
      type: object
      description: Класс для сериализации объектов модели Performer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 100
    PatchedSong:
      type: object
      description: Класс для сериализации модели Song
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 100
    Performer:
      type: object
      description: Класс для сериализации объектов модели Performer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 100
      required:
      - id
      - name
    Song:
      type: object
      description: Класс для сериализации модели Song
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 100
      required:
      - id
      - title
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
